class(x)
x <- (1+2)
class(x)
x2 <- "1"
class(x2)
y= x + x2
x2 <- as.numeric(x2)
class (x2)
a <- TRUE
b<- FALSE
class(a)
class(b)
1:6
10:60:10
?seq
x= seq(from=10,to=60,by=10)
load(url("http://www.openintro.org/stat/data/mlb11.RData"))
library(mosaic)
# Base R plot
plot(mlb11$at_bats, mlb11$runs, main = "Scatter Plot of Runs vs At Bats",
xlab = "At Bats", ylab = "Runs", pch = 19, col = 'blue')
correlation_coefficient <- cor(mlb11$runs, mlb11$at_bats)
print(correlation_coefficient)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
sum(residuals(m1)^2)
model_homeruns <- lm(runs ~ homeruns, data = mlb11)
summary(model_homeruns)
xyplot(runs ~ at_bats, data=mlb11, type=c("p", "r"))
xyplot(resid(m1) ~ fitted(m1), data=mlb11, type=c("p", "r"))
histogram(~residuals(m1), width=50)
qqmath(~resid(m1))
ladd(panel.qqmathline(resid(m1)))
qqmath(~resid(m1))
ladd(panel.qqmathline(resid(m1)))
# Example for high leverage, high influence and neither
set.seed(15)
a <- c(runif(20), 4)
b <- a*5+rnorm(21)
xyplot(b~a, pch=16, type=c("p", "r"))
# Example for high leverage, high influence and neither
b[21] <- b[21] -25
xyplot(b~a, pch=16, type=c("p", "r"))
# Example for high leverage, high influence and neither
set.seed(15)
a <- sort(runif(20))
b <- a*5 + rnorm(20)
b[10] <- 10
xyplot(b~a, pch=16, type=c("p", "r"))
# Scatterplot
plot(mlb11$strikeouts, mlb11$runs, main = "Scatterplot of Runs vs Strikeouts",
xlab = "Strikeouts", ylab = "Runs", pch = 19)
# Fit linear model
model_strikeouts <- lm(runs ~ strikeouts, data = mlb11)
summary(model_strikeouts)
# Add regression line to the scatterplot
abline(model_strikeouts, col = "blue")
cor(mlb11$runs, mlb11$new_onbase)
model_new_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(model_new_onbase)
plot(mlb11$new_onbase, mlb11$runs)
abline(model_new_onbase)
cor(mlb11$runs, mlb11$new_slug)
model_new_slug <- lm(runs ~ new_slug, data = mlb11)
summary(model_new_slug)
plot(mlb11$new_slug, mlb11$runs)
abline(model_new_slug)
cor(mlb11$runs, mlb11$new_slug)
model_new_slug <- lm(runs ~ new_slug, data = mlb11)
summary(model_new_slug)
plot(mlb11$new_slug, mlb11$runs)
abline(model_new_slug)
cor(mlb11$runs, mlb11$new_onbase)
model_new_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(model_new_onbase)
plot(mlb11$new_onbase, mlb11$runs)
abline(model_new_onbase)
cor(mlb11$runs, mlb11$new_slug)
model_new_slug <- lm(runs ~ new_slug, data = mlb11)
summary(model_new_slug)
plot(mlb11$new_slug, mlb11$runs)
abline(model_new_slug)
cor(mlb11$runs, mlb11$new_onbase)
model_new_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(model_new_onbase)
plot(mlb11$new_onbase, mlb11$runs)
abline(model_new_onbase)
cor(mlb11$runs, mlb11$new_slug)
model_new_slug <- lm(runs ~ new_slug, data = mlb11)
summary(model_new_slug)
plot(mlb11$new_slug, mlb11$runs)
abline(model_new_slug)
cor(mlb11$runs, mlb11$new_obs)
# Fit linear model for new_onbase
model_new_obs <- lm(runs ~ new_obs, data = mlb11)
summary(model_new_obs)
# Scatterplot with regression line for new_onbase
plot(mlb11$new_obs, mlb11$runs)
abline(model_new_obs)
df<-tibble
install.packages("tidyverse")
library(tidyverse)
df<-tibble(
id=1:10,
a=11:20,
b=11:20,
c=11:20
)
view(df)
nrow_df<-nrow(df)
nrow_df2<-nrow(df2)
tinytex::reinstall_tinytex(repository = "https://mirror.ctan.org/systems/texlive/tlnet")
install.packages('tinytex')
install.packages("tinytex")
load(url("http://www.openintro.org/stat/data/mlb11.RData"))
library(mosaic)
# Base R plot
plot(mlb11$at_bats, mlb11$runs, main = "Scatter Plot of Runs vs At Bats",
xlab = "At Bats", ylab = "Runs", pch = 19, col = 'blue')
correlation_coefficient <- cor(mlb11$runs, mlb11$at_bats)
print(correlation_coefficient)
model_homeruns <- lm(runs ~ homeruns, data = mlb11)
summary(model_homeruns)
# Example for high leverage, high influence and neither
set.seed(15)
a <- c(runif(20), 4)
b <- a*5+rnorm(21)
xyplot(b~a, pch=16, type=c("p", "r"))
# Example for high leverage, high influence and neither
b[21] <- b[21] -25
xyplot(b~a, pch=16, type=c("p", "r"))
# Example for high leverage, high influence and neither
set.seed(15)
a <- sort(runif(20))
b <- a*5 + rnorm(20)
b[10] <- 10
xyplot(b~a, pch=16, type=c("p", "r"))
scatterplt3<-lm(runs~hits,data=mlb11)
plot(mlb11$runs~mlb11$hits,main="Runs and Hits", xlab="Hits",ylab="Runs")
abline(scatterplt3)
cor(mlb11$runs,mlb11$hits)
summary(scatterplt3)
cor(mlb11$runs, mlb11$new_onbase)
model_new_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(model_new_onbase)
plot(mlb11$new_onbase, mlb11$runs)
abline(model_new_onbase)
cor(mlb11$runs, mlb11$new_slug)
model_new_slug <- lm(runs ~ new_slug, data = mlb11)
summary(model_new_slug)
plot(mlb11$new_slug, mlb11$runs)
abline(model_new_slug)
cor(mlb11$runs, mlb11$new_obs)
model_new_obs <- lm(runs ~ new_obs, data = mlb11)
summary(model_new_obs)
plot(mlb11$new_obs, mlb11$runs)
abline(model_new_obs)
plot(model_new_obs$residuals~mlb11$new_obs)
abline(h=0,lty=3)
hist(model_new_slug$residuals)
qqnorm(model_new_slug$residuals)
qqline(model_new_slug$residuals)
# Base R plot
plot(mlb11$at_bats, mlb11$runs, main = "Scatter Plot of Runs vs At Bats",
xlab = "At Bats", ylab = "Runs", pch = 19, col = 'blue')
correlation_coefficient <- cor(mlb11$runs, mlb11$at_bats)
print(correlation_coefficient)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
summary(m1)
sum(residuals(m1)^2)
summary(m1)
sum(residuals(m1)^2)
xyplot(runs ~ at_bats, data=mlb11, type=c("p", "r"))
# Base R plot
plot(mlb11$at_bats, mlb11$runs, main = "Scatter Plot of Runs vs At Bats",
xlab = "At Bats", ylab = "Runs", pch = 19, col = 'blue')
correlation_coefficient <- cor(mlb11$runs, mlb11$at_bats)
print(correlation_coefficient)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
sum(residuals(m1)^2)
model_homeruns <- lm(runs ~ homeruns, data = mlb11)
summary(model_homeruns)
xyplot(runs ~ at_bats, data=mlb11, type=c("p", "r"))
xyplot(resid(m1) ~ fitted(m1), data=mlb11, type=c("p", "r"))
histogram(~residuals(m1), width=50)
qqmath(~resid(m1))
ladd(panel.qqmathline(resid(m1)))
load(url("http://www.openintro.org/stat/data/mlb11.RData"))
library(mosaic)
# Base R plot
plot(mlb11$at_bats, mlb11$runs, main = "Scatter Plot of Runs vs At Bats",
xlab = "At Bats", ylab = "Runs", pch = 19, col = 'blue')
correlation_coefficient <- cor(mlb11$runs, mlb11$at_bats)
print(correlation_coefficient)
model_homeruns <- lm(runs ~ homeruns, data = mlb11)
summary(model_homeruns)
# Example for high leverage, high influence and neither
set.seed(15)
a <- c(runif(20), 4)
b <- a*5+rnorm(21)
xyplot(b~a, pch=16, type=c("p", "r"))
# Example for high leverage, high influence and neither
b[21] <- b[21] -25
xyplot(b~a, pch=16, type=c("p", "r"))
# Example for high leverage, high influence and neither
set.seed(15)
a <- sort(runif(20))
b <- a*5 + rnorm(20)
b[10] <- 10
xyplot(b~a, pch=16, type=c("p", "r"))
scatterplt3<-lm(runs~hits,data=mlb11)
plot(mlb11$runs~mlb11$hits,main="Runs and Hits", xlab="Hits",ylab="Runs")
abline(scatterplt3)
cor(mlb11$runs,mlb11$hits)
summary(scatterplt3)
cor(mlb11$runs, mlb11$new_onbase)
model_new_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(model_new_onbase)
plot(mlb11$new_onbase, mlb11$runs)
abline(model_new_onbase)
cor(mlb11$runs, mlb11$new_slug)
model_new_slug <- lm(runs ~ new_slug, data = mlb11)
summary(model_new_slug)
plot(mlb11$new_slug, mlb11$runs)
abline(model_new_slug)
cor(mlb11$runs, mlb11$new_obs)
model_new_obs <- lm(runs ~ new_obs, data = mlb11)
summary(model_new_obs)
plot(mlb11$new_obs, mlb11$runs)
abline(model_new_obs)
plot(model_new_obs$residuals~mlb11$new_obs)
abline(h=0,lty=3)
hist(model_new_slug$residuals)
qqnorm(model_new_slug$residuals)
qqline(model_new_slug$residuals)
data.df<-read.csv("")
data.df<-read.csv("combined_graduates.csv")
data.df<-read.csv("combined_gradrates.csv")
data.df<-read.csv("combined_gradrates.csv")
# Set working directory
Sys.info()['nodename']
# Set working directory
Sys.info()['nodename']
work_dir = ifelse(Sys.info()['nodename']=="P2010",
"C:/Users/ti/Local/seafile/main/---projects---/mm2019/replication_package",
"D:/Seafile/main/---projects---/mm2019/replication_package")
getwd()
# Packages
pkgs <- c(
"readxl",
"writexl",
"tidyverse",
"WikidataR",
"stringr",
"igraph"
)
# Packages
pkgs <- c(
"readxl",
"writexl",
"tidyverse",
"WikidataR",
"stringr",
"igraph"
)
## Install uninstalled packages
lapply(pkgs[!(pkgs %in% installed.packages())], install.packages)
## Load all packages to library
lapply(pkgs, library, character.only = TRUE)
rm(list = ls())
# Individuals on rich list 2019
df = read_excel("data/wikidata2019.xlsx")
# Individuals on rich list 2019
df = read_excel("Desktop/Elite Population Research/data/wikidata2019.xlsx")
df_test = df  %>% filter(!is.na(id_wikidata)) %>%
select(id_wikidata, id_fam, name) %>%
distinct(id_wikidata, .keep_all = TRUE)
length(unique(df_test$id_fam)) # 394 families
remove(df_test)
colnames <- c("item", "itemLabel")
df_wiki <- data.frame(matrix(ncol = length(colnames), nrow = 1))
colnames(df_wiki) <- colnames
wiki_list = unique(df %>% select(id_wikidata) %>% filter(!is.na(id_wikidata)))
###### 2.1 Get all family members ######
sparql_query01 = "SELECT ?item ?itemLabel
WHERE{
wd:"
sparql_query02 = "  (wdt:P1038|^wdt:P1038 | wdt:P3373|^wdt:P3373 | wdt:P40|^wdt:P40 | wdt:P26|^wdt:P26 | wdt:P22|^wdt:P22| wdt:P25|^wdt:P25 |  (wdt:P26/(wdt:P22|wdt:P25|wdt:P40)))? /
(wdt:P1038|^wdt:P1038 | wdt:P3373|^wdt:P3373 | wdt:P40|^wdt:P40 | wdt:P26|^wdt:P26 | wdt:P22|^wdt:P22| wdt:P25|^wdt:P25 |  (wdt:P26/(wdt:P22|wdt:P25|wdt:P40)))? /
(wdt:P1038|^wdt:P1038 | wdt:P3373|^wdt:P3373 | wdt:P40|^wdt:P40 | wdt:P26|^wdt:P26 | wdt:P22|^wdt:P22| wdt:P25|^wdt:P25 |  (wdt:P26/(wdt:P22|wdt:P25|wdt:P40)))? /
(wdt:P1038|^wdt:P1038 | wdt:P3373|^wdt:P3373 | wdt:P40|^wdt:P40 | wdt:P26|^wdt:P26 | wdt:P22|^wdt:P22| wdt:P25|^wdt:P25 |  (wdt:P26/(wdt:P22|wdt:P25|wdt:P40)))?  ?item.
SERVICE wikibase:label { bd:serviceParam wikibase:language 'de,en'. }
}
ORDER BY DESC(?item)
"
if (!file.exists("data_prepared/fam_members_richies2019.RData")) {
for (i in 1:length(wiki_list$id_wikidata)) {
print(i)
x = wiki_list$id_wikidata[[i]]
print(x)
# now we write the sparql query
sparql_query <- paste0(sparql_query01, x, sparql_query02)
df_single=tryCatch({query_wikidata(sparql_query, format = c("tibble"))},
error = function(e){  data.frame(item = "NA", itemLabel = x) })
df_single =  df_single %>%
mutate(across(everything(), as.character))
df_wiki = bind_rows(df_wiki, df_single)
df_wiki = unique(df_wiki)
}
save(df_wiki, file = "data_prepared/fam_members_richies2019.RData")
} else{
load("data_prepared/fam_members_richies2019.RData")
}
